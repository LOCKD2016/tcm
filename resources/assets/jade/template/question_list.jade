extends ../layout/layout
block nav
block body
    .tit_nav
        .container.clearfix
            .pull-left 问题列表
            .pull-right
                a.btn.btn-primary.btn-sm(v-link!="{ path: '/question_add' }")
                    i.icon-plus
                    span 添加问题
    .user_table_box.table-responsive
        table.table.table-bordered.check_list
            thead
                tr
                    th.col-sm-1 序号
                    th.col-sm-3 名称
                    th.col-sm-1 类型
                    th.col-sm-1 是否必填
                    th.col-sm-1 操作
            tbody
                tr(v-for="(i,ln) in questions")
                    td {{i+1}}
                    td {{ln.question}}
                    td {{ln.type}}
                    td {{ln.necessary}}
                    td
                        span(@click="checkDetail(ln.id)") 修改
                        span(@click="del(ln.id)" style='color:red') 删除
        nav
            ul.pagination
                paginate(:cur.sync="cur",:all.sync="all",v-on:btn-click="listen",v-if="cur",v-on:gopage="listen")

block js
    script(type="text/javascript").
        export default{
            created(){
                this.page = this.$route.params.id;
                this.getQuestions();
            },
            ready(){
                headNav(3);
            },
            data(){
                return{
                    questions:{},
                    cur:0,
                    all:0
                }
            },
            events: {
                questionlist(){
                    this.getQuestions(this.cur);
                }
            },
            methods:{
                getQuestions(page=''){
                    if (page) {
                        this.page = page;
                    }
                    this.$http({url:'question/index',method:'GET',params:{page:this.page}}).then(function (res) {
                        this.$set('questions',res.data.data);
                        var pagination = res.data.meta.pagination;
                        this.$set('cur', pagination.current_page);
                        this.$set('all', pagination.total_pages);
                    })
                },
                listen(data){
                    this.getQuestions(data);
                    this.$router.go({name: 'question_list', params: {id: data}});
                },
                checkDetail(id){
                    this.$router.go({name: 'question_answer',params: {id: id}});
                },
                del(id){
                    var vue = this;
                    layer.confirm('您确定删除？', {
                        btn: ['确定', '取消']
                    }, function () {
                        vue.$http.delete('question/' + id).then(function (res) {
                            if (res.data.status) {
                                layer.msg(res.data.msg);
                                vue.$dispatch('questionlist');
                            }
                        })
                    }, function () {

                    });
                }
            }
        }